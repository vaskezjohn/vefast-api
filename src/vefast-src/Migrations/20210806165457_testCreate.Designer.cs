// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vefast_src.Infrastructure;

namespace vefast_src.Migrations
{
    [DbContext(typeof(VefastDataContext))]
    [Migration("20210806165457_testCreate")]
    partial class testCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("vefast_src.Domain.Entities.Company.Company", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("company_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("country")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("currency")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("message")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("service_charge_value")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("vat_charge_value")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.User.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("firstname")
                        .HasColumnType("longtext");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("user")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Company.Company", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.User.User", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID");

                    b.HasOne("vefast_src.Domain.Entities.User.User", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID");

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });
#pragma warning restore 612, 618
        }
    }
}
