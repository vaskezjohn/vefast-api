// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vefast_src.Infrastructure;

namespace vefast_src.Migrations
{
    [DbContext(typeof(VefastDataContext))]
    [Migration("20210906114231_stock")]
    partial class stock
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("vefast_src.Domain.Entities.AttributeValue.AttributeValue", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("attribute_parent_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("attributes_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("products_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("value")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("AttributeValue");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.AttributeValueTipoProducto.AttributeValueTipoProducto", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IDAttributeValue")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IDTipoProducto")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("IDAttributeValue");

                    b.HasIndex("IDTipoProducto");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("AttributeValueTipoProducto");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Attributes.Attributes", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Brands.Brands", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("products_id")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Categories.Categories", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("products_id")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Company.Company", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("company_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("country")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("currency")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("message")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("service_charge_value")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("vat_charge_value")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Groups.Groups", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("group_name")
                        .HasColumnType("longtext");

                    b.Property<string>("permission")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Orders.Orders", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<string>("bill_no")
                        .HasColumnType("longtext");

                    b.Property<string>("customer_address")
                        .HasColumnType("longtext");

                    b.Property<string>("customer_name")
                        .HasColumnType("longtext");

                    b.Property<string>("customer_phone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_time")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("discount")
                        .HasColumnType("double");

                    b.Property<double>("gross_amount")
                        .HasColumnType("double");

                    b.Property<double>("net_amount")
                        .HasColumnType("double");

                    b.Property<Guid>("orders_item_id")
                        .HasColumnType("char(36)");

                    b.Property<int>("paid_status")
                        .HasColumnType("int");

                    b.Property<double>("service_charge")
                        .HasColumnType("double");

                    b.Property<double>("service_charge_rate")
                        .HasColumnType("double");

                    b.Property<Guid>("users_id")
                        .HasColumnType("char(36)");

                    b.Property<double>("vat_charge")
                        .HasColumnType("double");

                    b.Property<double>("vat_charge_rate")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.OrdersItem.OrdersItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<double>("amount")
                        .HasColumnType("double");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<Guid>("product_id")
                        .HasColumnType("char(36)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("rate")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Ordersitem");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Products.Products", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("attribute_value_id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("availability")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("brand_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("category_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("description")
                        .HasColumnType("Text");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("sku")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<Guid>("store_id")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Stock.Stock", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IDProducts")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDProducts");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Stores.Stores", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.TipoProducto.TipoProducto", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductsID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tipoProduct")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("ProductsID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("TipoProducto");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.UserGroup.UserGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("InsertUserID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UpdateUserID")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("group_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("char(36)");

                    b.HasKey("ID");

                    b.HasIndex("InsertUserID");

                    b.HasIndex("UpdateUserID");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Users.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("firstname")
                        .HasColumnType("longtext");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("lastname")
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("user")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.AttributeValue.AttributeValue", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.AttributeValueTipoProducto.AttributeValueTipoProducto", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.AttributeValue.AttributeValue", "AttributeValue")
                        .WithMany()
                        .HasForeignKey("IDAttributeValue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vefast_src.Domain.Entities.TipoProducto.TipoProducto", "TipoProducto")
                        .WithMany()
                        .HasForeignKey("IDTipoProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AttributeValue");

                    b.Navigation("InsertUser");

                    b.Navigation("TipoProducto");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Attributes.Attributes", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Brands.Brands", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Categories.Categories", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Company.Company", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Groups.Groups", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Orders.Orders", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.OrdersItem.OrdersItem", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Products.Products", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Stock.Stock", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Products.Products", "Products")
                        .WithMany()
                        .HasForeignKey("IDProducts")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("Products");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.Stores.Stores", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Company.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Company");

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.TipoProducto.TipoProducto", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Products.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("Products");

                    b.Navigation("UpdateUser");
                });

            modelBuilder.Entity("vefast_src.Domain.Entities.UserGroup.UserGroup", b =>
                {
                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "InsertUser")
                        .WithMany()
                        .HasForeignKey("InsertUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("vefast_src.Domain.Entities.Users.Users", "UpdateUser")
                        .WithMany()
                        .HasForeignKey("UpdateUserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InsertUser");

                    b.Navigation("UpdateUser");
                });
#pragma warning restore 612, 618
        }
    }
}
